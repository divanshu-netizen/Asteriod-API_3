<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20201001 19:19:47.559" rpa="false">
<suite id="s1" name="Testcase" source="C:\development\Git_Project\Asteriods_API\TestCases\testcase.robot">
<test id="s1-t1" name="TC001">
<kw name="Validating API with No Query Params" library="data_resources">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:19:48.286" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:19:48.285" endtime="20201001 19:19:48.286"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:19:51.581" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api 
 path_url=/cad.api 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:19:51.582" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api 
 status=200, reason=OK 
 body={"signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"},"count":"36","fields":["des","orbit_id","jd","cd","dist","dist_min","dist_max","v_rel","v_inf","t_sigma_f","h"],"data":[["2020 SM4","1","2459123.580813959","2020-Oct-01 01:56","0.0209051291867191","0.0204109784606601","0.0213991782753833","7.61794334093787","7.60119393291081","00:05","27.662"],["2020 SU5","1","2459123.635139058","2020-Oct-01 03:15","0.0139188544687588","0.0137767220536787","0.0140609747926471","9.40710780363488","9.38673629283377","00:01","26.795"],["2020 RJ3","11","2459123.898122446","2020-Oct-01 09:33","0.0390899472276987","0.0389533518232839","0.0392265420874599","15.4558600674391","15.4514492806076","&lt; 00:01","23.465"],["2020 SW6","1","2459124.020814906","2020-Oct-01 12:30","0.00720913591719229","0.00719712656001248","0.00722113981733357","2.11228248589926","1.92938904810993","00:10","28.711"],["2020 SN6","2","2459124.051169910","2020-Oct-01 13:14","0.00652425900517635","0.00649031243867626","0.00655819701979622","5.77594443419007","5.70479997041825","&lt; 00:01","28.79"],["2001 GP2","16","2459124.124581813","2020-Oct-01 14:59","0.0156459035754592","0.000909498572984523","0.0367119299148074","2.21414127161807","2.13584266201369","6_17:18","26.9"],["2020 RZ3","5","2459124.856555922","2020-Oct-02 08:33","0.0400361123280214","0.0397652125872091","0.0403070093621166","13.2566876405042","13.2516664385358","&lt; 00:01","24.925"],["2020 SY3","1","2459125.598386229","2020-Oct-03 02:22","0.0425861476823042","0.0419222821967175","0.0432499722110021","7.80454708858754","7.79652625477589","00:03","25.859"],["2010 UC","10","2459126.848329403","2020-Oct-04 08:22","0.0372611055270925","0.0311238017016864","0.0437269116807565","3.21236292632068","3.19002490826751","1_04:00","27.4"],["2020 RV2","8","2459128.455794825","2020-Oct-05 22:56","0.0380358854669288","0.0378990941391581","0.0381726686949511","4.16017343376627","4.14330056255971","&lt; 00:01","25.675"],["2020 RR2","7","2459129.121459060","2020-Oct-06 14:55","0.0417245755395077","0.0415147671703611","0.0419343673660762","4.08013737334099","4.06445611128583","00:01","25.544"],["2020 RK2","12","2459130.049755447","2020-Oct-07 13:12","0.0255893829569939","0.025550344425989","0.0256284209275315","6.67781460899025","6.66220377481243","&lt; 00:01","24.318"],["2019 SB6","2","2459130.474376995","2020-Oct-07 23:23","0.0304426271757058","0.0227471207759548","0.038143587726216","7.57778003426213","7.56622105215934","03:41","26.8"],["2020 SR6","2","2459130.735465060","2020-Oct-08 05:39","0.0180701124352722","0.0180143682663989","0.0181258530079065","5.25509632946546","5.22696210675074","&lt; 00:01","25.7"],["2020 SX3","1","2459130.969118184","2020-Oct-08 11:16","0.0113552897778354","0.0113219329492695","0.011388646066506","10.8793643184594","10.8577748602004","00:13","24.237"],["2020 RO1","5","2459132.176101537","2020-Oct-09 16:14","0.0446415058754544","0.0446116500030021","0.0446713612988751","3.21348334260181","3.19485569402529","&lt; 00:01","25.405"],["2018 GD2","1","2459136.073021506","2020-Oct-13 13:45","0.0418695882785897","0.0370963199607446","0.0466556919039509","6.70010747896787","6.69060274315132","03:59","29.4"],["2020 RM6","2","2459137.715925501","2020-Oct-15 05:11","0.0332721522815656","0.0331709286933099","0.033373374308984","7.70853312607536","7.69813745186573","00:30","24.795"],["2017 UH5","2","2459142.636167668","2020-Oct-20 03:16","0.0228340554196692","0.0222591527415551","0.0414088955279864","5.92821261429195","5.90849618170005","6_12:30","26.5"],["2020 SG3","3","2459143.412223093","2020-Oct-20 21:54","0.0499210032521326","0.0496083706529744","0.0502336225391414","5.33209456677164","5.32207521939182","00:05","25.109"],["2018 VG","3","2459144.153455600","2020-Oct-21 15:41","0.0387040891193301","0.0374898264219415","0.0399273001093406","6.72609608291864","6.7158531754433","19:40","27.4"],["2017 TK6","8","2459146.940793558","2020-Oct-24 10:35","0.0441892043374442","0.0424566365206183","0.0471094261315949","12.4455264686515","12.4406806466282","03:58","24.7"],["2008 GM2","12","2459148.492460866","2020-Oct-25 23:49","0.0452029089395396","0.0362103357028827","0.0545926865198956","3.58621722267222","3.56974288141363","07:38","28.3"],["2020 QD5","2","2459148.621940456","2020-Oct-26 02:56","0.025763042373117","0.0257243482456801","0.0258017423282164","8.56921365449276","8.55713606131734","00:45","23.227"],["2020 OK5","18","2459151.870636348","2020-Oct-29 08:54","0.0164314334695969","0.0164248365373497","0.01643802959727","1.2860276781793","1.15306213653123","00:01","25.546"],["2018 VP1","4","2459155.981541014","2020-Nov-02 11:33","0.00280167254552464","3.90766585857012e-05","0.0256085074009903","9.71114662839966","9.61271582257126","3_07:11","30.9"],["2020 HF4","5","2459157.453326852","2020-Nov-03 22:53","0.0414035151003734","0.0410997052947467","0.0417073377153219","2.88844049797212","2.86607407960607","00:04","27.563"],["2010 JL88","7","2459159.419528397","2020-Nov-05 22:04","0.0267818380363214","0.00118085989258472","0.124246396626902","15.6639825482897","15.6576298553779","5_18:57","26.8"],["2019 XS","4","2459161.384049088","2020-Nov-07 21:13","0.0393955999561795","0.0348619785193184","0.0439367808461489","9.44588784861025","9.43872498720352","03:14","24.2"],["2018 VS4","3","2459162.958550490","2020-Nov-09 11:00","0.0381472776329596","0.0344188790586722","0.0835829161332143","10.0703922632204","10.0634539795072","5_07:22","25.8"],["2020 ST1","4","2459167.857269424","2020-Nov-14 08:34","0.0488597838818327","0.0486010678149537","0.0491184994090823","8.05166415964946","8.04488840083524","01:19","21.703"],["2019 VL5","2","2459168.934759671","2020-Nov-15 10:26","0.021732810007007","0.0217292375096055","0.0223542176744774","8.17741153263742","8.16240503679483","04:03","25.9"],["2017 WJ16","5","2459177.036929361","2020-Nov-23 12:53","0.0127091896304229","0.01043030494715","0.01572438024177","4.75066355638837","4.70632601749626","1_18:20","24.3"],["2018 RQ4","6","2459179.694905144","2020-Nov-26 04:41","0.0208558171837912","0.00285411045178811","0.0572555901582887","7.43856924406299","7.42137441041999","8_01:42","26.9"],["2020 KZ2","5","2459181.696573437","2020-Nov-28 04:43","0.0145807732550289","0.0143258402477287","0.0148369892668334","3.91171979677915","3.86472163295805","00:32","27.683"],["153201","116","2459182.714106554","2020-Nov-29 05:08","0.0287618678984483","0.0287609099965326","0.0287628258007809","25.0726387403463","25.0689436315515","&lt; 00:01","19.3"]]}
 
 </msg>
<msg timestamp="20201001 19:19:51.582" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:19:51.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 19:19:48.286" endtime="20201001 19:19:51.583"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20201001 19:19:51.584" level="INFO">${statusC} = 200</msg>
<status status="PASS" starttime="20201001 19:19:51.583" endtime="20201001 19:19:51.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedStatusCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:19:51.584" endtime="20201001 19:19:51.584"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responsebody}</var>
</assign>
<msg timestamp="20201001 19:19:51.586" level="INFO">${responsebody} = {"signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"},"count":"36","fields":["des","orbit_id","jd","cd","dist","dist_min","dist_max","v_rel","v_inf","t_sigma_f","h"],"data":[...</msg>
<status status="PASS" starttime="20201001 19:19:51.585" endtime="20201001 19:19:51.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responsebody}</arg>
<arg>signature</arg>
</arguments>
<status status="PASS" starttime="20201001 19:19:51.586" endtime="20201001 19:19:51.587"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:48.285" endtime="20201001 19:19:51.587"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:48.284" endtime="20201001 19:19:51.588" critical="yes"></status>
</test>
<test id="s1-t2" name="TC002">
<kw name="Fetch and Validate Status Code" library="data_resources">
<arguments>
<arg>date-min=now date-max=+60 dist-max=0.05</arg>
<arg>200</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:19:51.591" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:19:51.591" endtime="20201001 19:19:51.592"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>date-min=now</arg>
<arg>date-max=+60</arg>
<arg>dist-max=0.05</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:19:51.593" level="INFO">&amp;{params} = { date-min=now | date-max=+60 | dist-max=0.05 }</msg>
<status status="PASS" starttime="20201001 19:19:51.592" endtime="20201001 19:19:51.593"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:19:54.543" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 path_url=/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:19:54.544" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 status=200, reason=OK 
 body={"signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"},"count":"36","fields":["des","orbit_id","jd","cd","dist","dist_min","dist_max","v_rel","v_inf","t_sigma_f","h"],"data":[["2020 SM4","1","2459123.580813959","2020-Oct-01 01:56","0.0209051291867191","0.0204109784606601","0.0213991782753833","7.61794334093787","7.60119393291081","00:05","27.662"],["2020 SU5","1","2459123.635139058","2020-Oct-01 03:15","0.0139188544687588","0.0137767220536787","0.0140609747926471","9.40710780363488","9.38673629283377","00:01","26.795"],["2020 RJ3","11","2459123.898122446","2020-Oct-01 09:33","0.0390899472276987","0.0389533518232839","0.0392265420874599","15.4558600674391","15.4514492806076","&lt; 00:01","23.465"],["2020 SW6","1","2459124.020814906","2020-Oct-01 12:30","0.00720913591719229","0.00719712656001248","0.00722113981733357","2.11228248589926","1.92938904810993","00:10","28.711"],["2020 SN6","2","2459124.051169910","2020-Oct-01 13:14","0.00652425900517635","0.00649031243867626","0.00655819701979622","5.77594443419007","5.70479997041825","&lt; 00:01","28.79"],["2001 GP2","16","2459124.124581813","2020-Oct-01 14:59","0.0156459035754592","0.000909498572984523","0.0367119299148074","2.21414127161807","2.13584266201369","6_17:18","26.9"],["2020 RZ3","5","2459124.856555922","2020-Oct-02 08:33","0.0400361123280214","0.0397652125872091","0.0403070093621166","13.2566876405042","13.2516664385358","&lt; 00:01","24.925"],["2020 SY3","1","2459125.598386229","2020-Oct-03 02:22","0.0425861476823042","0.0419222821967175","0.0432499722110021","7.80454708858754","7.79652625477589","00:03","25.859"],["2010 UC","10","2459126.848329403","2020-Oct-04 08:22","0.0372611055270925","0.0311238017016864","0.0437269116807565","3.21236292632068","3.19002490826751","1_04:00","27.4"],["2020 RV2","8","2459128.455794825","2020-Oct-05 22:56","0.0380358854669288","0.0378990941391581","0.0381726686949511","4.16017343376627","4.14330056255971","&lt; 00:01","25.675"],["2020 RR2","7","2459129.121459060","2020-Oct-06 14:55","0.0417245755395077","0.0415147671703611","0.0419343673660762","4.08013737334099","4.06445611128583","00:01","25.544"],["2020 RK2","12","2459130.049755447","2020-Oct-07 13:12","0.0255893829569939","0.025550344425989","0.0256284209275315","6.67781460899025","6.66220377481243","&lt; 00:01","24.318"],["2019 SB6","2","2459130.474376995","2020-Oct-07 23:23","0.0304426271757058","0.0227471207759548","0.038143587726216","7.57778003426213","7.56622105215934","03:41","26.8"],["2020 SR6","2","2459130.735465060","2020-Oct-08 05:39","0.0180701124352722","0.0180143682663989","0.0181258530079065","5.25509632946546","5.22696210675074","&lt; 00:01","25.7"],["2020 SX3","1","2459130.969118184","2020-Oct-08 11:16","0.0113552897778354","0.0113219329492695","0.011388646066506","10.8793643184594","10.8577748602004","00:13","24.237"],["2020 RO1","5","2459132.176101537","2020-Oct-09 16:14","0.0446415058754544","0.0446116500030021","0.0446713612988751","3.21348334260181","3.19485569402529","&lt; 00:01","25.405"],["2018 GD2","1","2459136.073021506","2020-Oct-13 13:45","0.0418695882785897","0.0370963199607446","0.0466556919039509","6.70010747896787","6.69060274315132","03:59","29.4"],["2020 RM6","2","2459137.715925501","2020-Oct-15 05:11","0.0332721522815656","0.0331709286933099","0.033373374308984","7.70853312607536","7.69813745186573","00:30","24.795"],["2017 UH5","2","2459142.636167668","2020-Oct-20 03:16","0.0228340554196692","0.0222591527415551","0.0414088955279864","5.92821261429195","5.90849618170005","6_12:30","26.5"],["2020 SG3","3","2459143.412223093","2020-Oct-20 21:54","0.0499210032521326","0.0496083706529744","0.0502336225391414","5.33209456677164","5.32207521939182","00:05","25.109"],["2018 VG","3","2459144.153455600","2020-Oct-21 15:41","0.0387040891193301","0.0374898264219415","0.0399273001093406","6.72609608291864","6.7158531754433","19:40","27.4"],["2017 TK6","8","2459146.940793558","2020-Oct-24 10:35","0.0441892043374442","0.0424566365206183","0.0471094261315949","12.4455264686515","12.4406806466282","03:58","24.7"],["2008 GM2","12","2459148.492460866","2020-Oct-25 23:49","0.0452029089395396","0.0362103357028827","0.0545926865198956","3.58621722267222","3.56974288141363","07:38","28.3"],["2020 QD5","2","2459148.621940456","2020-Oct-26 02:56","0.025763042373117","0.0257243482456801","0.0258017423282164","8.56921365449276","8.55713606131734","00:45","23.227"],["2020 OK5","18","2459151.870636348","2020-Oct-29 08:54","0.0164314334695969","0.0164248365373497","0.01643802959727","1.2860276781793","1.15306213653123","00:01","25.546"],["2018 VP1","4","2459155.981541014","2020-Nov-02 11:33","0.00280167254552464","3.90766585857012e-05","0.0256085074009903","9.71114662839966","9.61271582257126","3_07:11","30.9"],["2020 HF4","5","2459157.453326852","2020-Nov-03 22:53","0.0414035151003734","0.0410997052947467","0.0417073377153219","2.88844049797212","2.86607407960607","00:04","27.563"],["2010 JL88","7","2459159.419528397","2020-Nov-05 22:04","0.0267818380363214","0.00118085989258472","0.124246396626902","15.6639825482897","15.6576298553779","5_18:57","26.8"],["2019 XS","4","2459161.384049088","2020-Nov-07 21:13","0.0393955999561795","0.0348619785193184","0.0439367808461489","9.44588784861025","9.43872498720352","03:14","24.2"],["2018 VS4","3","2459162.958550490","2020-Nov-09 11:00","0.0381472776329596","0.0344188790586722","0.0835829161332143","10.0703922632204","10.0634539795072","5_07:22","25.8"],["2020 ST1","4","2459167.857269424","2020-Nov-14 08:34","0.0488597838818327","0.0486010678149537","0.0491184994090823","8.05166415964946","8.04488840083524","01:19","21.703"],["2019 VL5","2","2459168.934759671","2020-Nov-15 10:26","0.021732810007007","0.0217292375096055","0.0223542176744774","8.17741153263742","8.16240503679483","04:03","25.9"],["2017 WJ16","5","2459177.036929361","2020-Nov-23 12:53","0.0127091896304229","0.01043030494715","0.01572438024177","4.75066355638837","4.70632601749626","1_18:20","24.3"],["2018 RQ4","6","2459179.694905144","2020-Nov-26 04:41","0.0208558171837912","0.00285411045178811","0.0572555901582887","7.43856924406299","7.42137441041999","8_01:42","26.9"],["2020 KZ2","5","2459181.696573437","2020-Nov-28 04:43","0.0145807732550289","0.0143258402477287","0.0148369892668334","3.91171979677915","3.86472163295805","00:32","27.683"],["153201","116","2459182.714106554","2020-Nov-29 05:08","0.0287618678984483","0.0287609099965326","0.0287628258007809","25.0726387403463","25.0689436315515","&lt; 00:01","19.3"]]}
 
 </msg>
<msg timestamp="20201001 19:19:54.544" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:19:54.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 19:19:51.593" endtime="20201001 19:19:54.545"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20201001 19:19:54.546" level="INFO">${statusC} = 200</msg>
<status status="PASS" starttime="20201001 19:19:54.545" endtime="20201001 19:19:54.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedStatusCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:19:54.547" endtime="20201001 19:19:54.548"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:51.590" endtime="20201001 19:19:54.548"></status>
</kw>
<kw name="Fetch and Validate Status Code" library="data_resources">
<arguments>
<arg>dist-max=10LD date-min=2018-01-01 sort=dist</arg>
<arg>200</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:19:54.551" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:19:54.550" endtime="20201001 19:19:54.552"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>date-min=now</arg>
<arg>date-max=+60</arg>
<arg>dist-max=0.05</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:19:54.553" level="INFO">&amp;{params} = { date-min=now | date-max=+60 | dist-max=0.05 }</msg>
<status status="PASS" starttime="20201001 19:19:54.552" endtime="20201001 19:19:54.553"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:19:57.440" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 path_url=/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:19:57.441" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 status=200, reason=OK 
 body={"signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"},"count":"36","fields":["des","orbit_id","jd","cd","dist","dist_min","dist_max","v_rel","v_inf","t_sigma_f","h"],"data":[["2020 SM4","1","2459123.580813959","2020-Oct-01 01:56","0.0209051291867191","0.0204109784606601","0.0213991782753833","7.61794334093787","7.60119393291081","00:05","27.662"],["2020 SU5","1","2459123.635139058","2020-Oct-01 03:15","0.0139188544687588","0.0137767220536787","0.0140609747926471","9.40710780363488","9.38673629283377","00:01","26.795"],["2020 RJ3","11","2459123.898122446","2020-Oct-01 09:33","0.0390899472276987","0.0389533518232839","0.0392265420874599","15.4558600674391","15.4514492806076","&lt; 00:01","23.465"],["2020 SW6","1","2459124.020814906","2020-Oct-01 12:30","0.00720913591719229","0.00719712656001248","0.00722113981733357","2.11228248589926","1.92938904810993","00:10","28.711"],["2020 SN6","2","2459124.051169910","2020-Oct-01 13:14","0.00652425900517635","0.00649031243867626","0.00655819701979622","5.77594443419007","5.70479997041825","&lt; 00:01","28.79"],["2001 GP2","16","2459124.124581813","2020-Oct-01 14:59","0.0156459035754592","0.000909498572984523","0.0367119299148074","2.21414127161807","2.13584266201369","6_17:18","26.9"],["2020 RZ3","5","2459124.856555922","2020-Oct-02 08:33","0.0400361123280214","0.0397652125872091","0.0403070093621166","13.2566876405042","13.2516664385358","&lt; 00:01","24.925"],["2020 SY3","1","2459125.598386229","2020-Oct-03 02:22","0.0425861476823042","0.0419222821967175","0.0432499722110021","7.80454708858754","7.79652625477589","00:03","25.859"],["2010 UC","10","2459126.848329403","2020-Oct-04 08:22","0.0372611055270925","0.0311238017016864","0.0437269116807565","3.21236292632068","3.19002490826751","1_04:00","27.4"],["2020 RV2","8","2459128.455794825","2020-Oct-05 22:56","0.0380358854669288","0.0378990941391581","0.0381726686949511","4.16017343376627","4.14330056255971","&lt; 00:01","25.675"],["2020 RR2","7","2459129.121459060","2020-Oct-06 14:55","0.0417245755395077","0.0415147671703611","0.0419343673660762","4.08013737334099","4.06445611128583","00:01","25.544"],["2020 RK2","12","2459130.049755447","2020-Oct-07 13:12","0.0255893829569939","0.025550344425989","0.0256284209275315","6.67781460899025","6.66220377481243","&lt; 00:01","24.318"],["2019 SB6","2","2459130.474376995","2020-Oct-07 23:23","0.0304426271757058","0.0227471207759548","0.038143587726216","7.57778003426213","7.56622105215934","03:41","26.8"],["2020 SR6","2","2459130.735465060","2020-Oct-08 05:39","0.0180701124352722","0.0180143682663989","0.0181258530079065","5.25509632946546","5.22696210675074","&lt; 00:01","25.7"],["2020 SX3","1","2459130.969118184","2020-Oct-08 11:16","0.0113552897778354","0.0113219329492695","0.011388646066506","10.8793643184594","10.8577748602004","00:13","24.237"],["2020 RO1","5","2459132.176101537","2020-Oct-09 16:14","0.0446415058754544","0.0446116500030021","0.0446713612988751","3.21348334260181","3.19485569402529","&lt; 00:01","25.405"],["2018 GD2","1","2459136.073021506","2020-Oct-13 13:45","0.0418695882785897","0.0370963199607446","0.0466556919039509","6.70010747896787","6.69060274315132","03:59","29.4"],["2020 RM6","2","2459137.715925501","2020-Oct-15 05:11","0.0332721522815656","0.0331709286933099","0.033373374308984","7.70853312607536","7.69813745186573","00:30","24.795"],["2017 UH5","2","2459142.636167668","2020-Oct-20 03:16","0.0228340554196692","0.0222591527415551","0.0414088955279864","5.92821261429195","5.90849618170005","6_12:30","26.5"],["2020 SG3","3","2459143.412223093","2020-Oct-20 21:54","0.0499210032521326","0.0496083706529744","0.0502336225391414","5.33209456677164","5.32207521939182","00:05","25.109"],["2018 VG","3","2459144.153455600","2020-Oct-21 15:41","0.0387040891193301","0.0374898264219415","0.0399273001093406","6.72609608291864","6.7158531754433","19:40","27.4"],["2017 TK6","8","2459146.940793558","2020-Oct-24 10:35","0.0441892043374442","0.0424566365206183","0.0471094261315949","12.4455264686515","12.4406806466282","03:58","24.7"],["2008 GM2","12","2459148.492460866","2020-Oct-25 23:49","0.0452029089395396","0.0362103357028827","0.0545926865198956","3.58621722267222","3.56974288141363","07:38","28.3"],["2020 QD5","2","2459148.621940456","2020-Oct-26 02:56","0.025763042373117","0.0257243482456801","0.0258017423282164","8.56921365449276","8.55713606131734","00:45","23.227"],["2020 OK5","18","2459151.870636348","2020-Oct-29 08:54","0.0164314334695969","0.0164248365373497","0.01643802959727","1.2860276781793","1.15306213653123","00:01","25.546"],["2018 VP1","4","2459155.981541014","2020-Nov-02 11:33","0.00280167254552464","3.90766585857012e-05","0.0256085074009903","9.71114662839966","9.61271582257126","3_07:11","30.9"],["2020 HF4","5","2459157.453326852","2020-Nov-03 22:53","0.0414035151003734","0.0410997052947467","0.0417073377153219","2.88844049797212","2.86607407960607","00:04","27.563"],["2010 JL88","7","2459159.419528397","2020-Nov-05 22:04","0.0267818380363214","0.00118085989258472","0.124246396626902","15.6639825482897","15.6576298553779","5_18:57","26.8"],["2019 XS","4","2459161.384049088","2020-Nov-07 21:13","0.0393955999561795","0.0348619785193184","0.0439367808461489","9.44588784861025","9.43872498720352","03:14","24.2"],["2018 VS4","3","2459162.958550490","2020-Nov-09 11:00","0.0381472776329596","0.0344188790586722","0.0835829161332143","10.0703922632204","10.0634539795072","5_07:22","25.8"],["2020 ST1","4","2459167.857269424","2020-Nov-14 08:34","0.0488597838818327","0.0486010678149537","0.0491184994090823","8.05166415964946","8.04488840083524","01:19","21.703"],["2019 VL5","2","2459168.934759671","2020-Nov-15 10:26","0.021732810007007","0.0217292375096055","0.0223542176744774","8.17741153263742","8.16240503679483","04:03","25.9"],["2017 WJ16","5","2459177.036929361","2020-Nov-23 12:53","0.0127091896304229","0.01043030494715","0.01572438024177","4.75066355638837","4.70632601749626","1_18:20","24.3"],["2018 RQ4","6","2459179.694905144","2020-Nov-26 04:41","0.0208558171837912","0.00285411045178811","0.0572555901582887","7.43856924406299","7.42137441041999","8_01:42","26.9"],["2020 KZ2","5","2459181.696573437","2020-Nov-28 04:43","0.0145807732550289","0.0143258402477287","0.0148369892668334","3.91171979677915","3.86472163295805","00:32","27.683"],["153201","116","2459182.714106554","2020-Nov-29 05:08","0.0287618678984483","0.0287609099965326","0.0287628258007809","25.0726387403463","25.0689436315515","&lt; 00:01","19.3"]]}
 
 </msg>
<msg timestamp="20201001 19:19:57.442" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:19:57.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 19:19:54.554" endtime="20201001 19:19:57.453"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20201001 19:19:57.454" level="INFO">${statusC} = 200</msg>
<status status="PASS" starttime="20201001 19:19:57.453" endtime="20201001 19:19:57.454"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedStatusCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:19:57.454" endtime="20201001 19:19:57.455"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:54.549" endtime="20201001 19:19:57.455"></status>
</kw>
<kw name="Fetch and Validate Status Code" library="data_resources">
<arguments>
<arg>des=141P</arg>
<arg>200</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:19:57.458" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:19:57.457" endtime="20201001 19:19:57.458"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>date-min=now</arg>
<arg>date-max=+60</arg>
<arg>dist-max=0.05</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:19:57.460" level="INFO">&amp;{params} = { date-min=now | date-max=+60 | dist-max=0.05 }</msg>
<status status="PASS" starttime="20201001 19:19:57.459" endtime="20201001 19:19:57.460"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:19:58.547" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 path_url=/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:19:58.547" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?date-min=now&amp;date-max=%2B60&amp;dist-max=0.05 
 status=200, reason=OK 
 body={"signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"},"count":"36","fields":["des","orbit_id","jd","cd","dist","dist_min","dist_max","v_rel","v_inf","t_sigma_f","h"],"data":[["2020 SM4","1","2459123.580813959","2020-Oct-01 01:56","0.0209051291867191","0.0204109784606601","0.0213991782753833","7.61794334093787","7.60119393291081","00:05","27.662"],["2020 SU5","1","2459123.635139058","2020-Oct-01 03:15","0.0139188544687588","0.0137767220536787","0.0140609747926471","9.40710780363488","9.38673629283377","00:01","26.795"],["2020 RJ3","11","2459123.898122446","2020-Oct-01 09:33","0.0390899472276987","0.0389533518232839","0.0392265420874599","15.4558600674391","15.4514492806076","&lt; 00:01","23.465"],["2020 SW6","1","2459124.020814906","2020-Oct-01 12:30","0.00720913591719229","0.00719712656001248","0.00722113981733357","2.11228248589926","1.92938904810993","00:10","28.711"],["2020 SN6","2","2459124.051169910","2020-Oct-01 13:14","0.00652425900517635","0.00649031243867626","0.00655819701979622","5.77594443419007","5.70479997041825","&lt; 00:01","28.79"],["2001 GP2","16","2459124.124581813","2020-Oct-01 14:59","0.0156459035754592","0.000909498572984523","0.0367119299148074","2.21414127161807","2.13584266201369","6_17:18","26.9"],["2020 RZ3","5","2459124.856555922","2020-Oct-02 08:33","0.0400361123280214","0.0397652125872091","0.0403070093621166","13.2566876405042","13.2516664385358","&lt; 00:01","24.925"],["2020 SY3","1","2459125.598386229","2020-Oct-03 02:22","0.0425861476823042","0.0419222821967175","0.0432499722110021","7.80454708858754","7.79652625477589","00:03","25.859"],["2010 UC","10","2459126.848329403","2020-Oct-04 08:22","0.0372611055270925","0.0311238017016864","0.0437269116807565","3.21236292632068","3.19002490826751","1_04:00","27.4"],["2020 RV2","8","2459128.455794825","2020-Oct-05 22:56","0.0380358854669288","0.0378990941391581","0.0381726686949511","4.16017343376627","4.14330056255971","&lt; 00:01","25.675"],["2020 RR2","7","2459129.121459060","2020-Oct-06 14:55","0.0417245755395077","0.0415147671703611","0.0419343673660762","4.08013737334099","4.06445611128583","00:01","25.544"],["2020 RK2","12","2459130.049755447","2020-Oct-07 13:12","0.0255893829569939","0.025550344425989","0.0256284209275315","6.67781460899025","6.66220377481243","&lt; 00:01","24.318"],["2019 SB6","2","2459130.474376995","2020-Oct-07 23:23","0.0304426271757058","0.0227471207759548","0.038143587726216","7.57778003426213","7.56622105215934","03:41","26.8"],["2020 SR6","2","2459130.735465060","2020-Oct-08 05:39","0.0180701124352722","0.0180143682663989","0.0181258530079065","5.25509632946546","5.22696210675074","&lt; 00:01","25.7"],["2020 SX3","1","2459130.969118184","2020-Oct-08 11:16","0.0113552897778354","0.0113219329492695","0.011388646066506","10.8793643184594","10.8577748602004","00:13","24.237"],["2020 RO1","5","2459132.176101537","2020-Oct-09 16:14","0.0446415058754544","0.0446116500030021","0.0446713612988751","3.21348334260181","3.19485569402529","&lt; 00:01","25.405"],["2018 GD2","1","2459136.073021506","2020-Oct-13 13:45","0.0418695882785897","0.0370963199607446","0.0466556919039509","6.70010747896787","6.69060274315132","03:59","29.4"],["2020 RM6","2","2459137.715925501","2020-Oct-15 05:11","0.0332721522815656","0.0331709286933099","0.033373374308984","7.70853312607536","7.69813745186573","00:30","24.795"],["2017 UH5","2","2459142.636167668","2020-Oct-20 03:16","0.0228340554196692","0.0222591527415551","0.0414088955279864","5.92821261429195","5.90849618170005","6_12:30","26.5"],["2020 SG3","3","2459143.412223093","2020-Oct-20 21:54","0.0499210032521326","0.0496083706529744","0.0502336225391414","5.33209456677164","5.32207521939182","00:05","25.109"],["2018 VG","3","2459144.153455600","2020-Oct-21 15:41","0.0387040891193301","0.0374898264219415","0.0399273001093406","6.72609608291864","6.7158531754433","19:40","27.4"],["2017 TK6","8","2459146.940793558","2020-Oct-24 10:35","0.0441892043374442","0.0424566365206183","0.0471094261315949","12.4455264686515","12.4406806466282","03:58","24.7"],["2008 GM2","12","2459148.492460866","2020-Oct-25 23:49","0.0452029089395396","0.0362103357028827","0.0545926865198956","3.58621722267222","3.56974288141363","07:38","28.3"],["2020 QD5","2","2459148.621940456","2020-Oct-26 02:56","0.025763042373117","0.0257243482456801","0.0258017423282164","8.56921365449276","8.55713606131734","00:45","23.227"],["2020 OK5","18","2459151.870636348","2020-Oct-29 08:54","0.0164314334695969","0.0164248365373497","0.01643802959727","1.2860276781793","1.15306213653123","00:01","25.546"],["2018 VP1","4","2459155.981541014","2020-Nov-02 11:33","0.00280167254552464","3.90766585857012e-05","0.0256085074009903","9.71114662839966","9.61271582257126","3_07:11","30.9"],["2020 HF4","5","2459157.453326852","2020-Nov-03 22:53","0.0414035151003734","0.0410997052947467","0.0417073377153219","2.88844049797212","2.86607407960607","00:04","27.563"],["2010 JL88","7","2459159.419528397","2020-Nov-05 22:04","0.0267818380363214","0.00118085989258472","0.124246396626902","15.6639825482897","15.6576298553779","5_18:57","26.8"],["2019 XS","4","2459161.384049088","2020-Nov-07 21:13","0.0393955999561795","0.0348619785193184","0.0439367808461489","9.44588784861025","9.43872498720352","03:14","24.2"],["2018 VS4","3","2459162.958550490","2020-Nov-09 11:00","0.0381472776329596","0.0344188790586722","0.0835829161332143","10.0703922632204","10.0634539795072","5_07:22","25.8"],["2020 ST1","4","2459167.857269424","2020-Nov-14 08:34","0.0488597838818327","0.0486010678149537","0.0491184994090823","8.05166415964946","8.04488840083524","01:19","21.703"],["2019 VL5","2","2459168.934759671","2020-Nov-15 10:26","0.021732810007007","0.0217292375096055","0.0223542176744774","8.17741153263742","8.16240503679483","04:03","25.9"],["2017 WJ16","5","2459177.036929361","2020-Nov-23 12:53","0.0127091896304229","0.01043030494715","0.01572438024177","4.75066355638837","4.70632601749626","1_18:20","24.3"],["2018 RQ4","6","2459179.694905144","2020-Nov-26 04:41","0.0208558171837912","0.00285411045178811","0.0572555901582887","7.43856924406299","7.42137441041999","8_01:42","26.9"],["2020 KZ2","5","2459181.696573437","2020-Nov-28 04:43","0.0145807732550289","0.0143258402477287","0.0148369892668334","3.91171979677915","3.86472163295805","00:32","27.683"],["153201","116","2459182.714106554","2020-Nov-29 05:08","0.0287618678984483","0.0287609099965326","0.0287628258007809","25.0726387403463","25.0689436315515","&lt; 00:01","19.3"]]}
 
 </msg>
<msg timestamp="20201001 19:19:58.547" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:19:58.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 19:19:57.460" endtime="20201001 19:19:58.548"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20201001 19:19:58.549" level="INFO">${statusC} = 200</msg>
<status status="PASS" starttime="20201001 19:19:58.548" endtime="20201001 19:19:58.549"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedStatusCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:19:58.549" endtime="20201001 19:19:58.550"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:57.456" endtime="20201001 19:19:58.550"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:51.589" endtime="20201001 19:19:58.551" critical="yes"></status>
</test>
<test id="s1-t3" name="TC003">
<kw name="Verify when query too restrictive" library="data_resources">
<arguments>
<arg>des=141P</arg>
<arg>0</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:19:58.555" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:19:58.554" endtime="20201001 19:19:58.555"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>des=141P</arg>
<arg>v-inf-min=18.5</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:19:58.555" level="INFO">&amp;{params} = { des=141P | v-inf-min=18.5 }</msg>
<status status="PASS" starttime="20201001 19:19:58.555" endtime="20201001 19:19:58.555"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:19:59.618" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?des=141P&amp;v-inf-min=18.5 
 path_url=/cad.api?des=141P&amp;v-inf-min=18.5 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:19:59.618" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?des=141P&amp;v-inf-min=18.5 
 status=200, reason=OK 
 body={"count":"0","signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"}}
 
 </msg>
<msg timestamp="20201001 19:19:59.618" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:19:59.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 19:19:58.556" endtime="20201001 19:19:59.619"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${expectedcount}</var>
</assign>
<msg timestamp="20201001 19:19:59.620" level="INFO">${expectedcount} = {"count":"0","signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"}}
</msg>
<status status="PASS" starttime="20201001 19:19:59.619" endtime="20201001 19:19:59.620"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedcountno}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20201001 19:19:59.621" endtime="20201001 19:19:59.621"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:58.554" endtime="20201001 19:19:59.621"></status>
</kw>
<kw name="Verify when query too restrictive" library="data_resources">
<arguments>
<arg>des=141P v-inf-min=18.5</arg>
<arg>0</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:19:59.623" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:19:59.622" endtime="20201001 19:19:59.623"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>des=141P</arg>
<arg>v-inf-min=18.5</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:19:59.624" level="INFO">&amp;{params} = { des=141P | v-inf-min=18.5 }</msg>
<status status="PASS" starttime="20201001 19:19:59.624" endtime="20201001 19:19:59.624"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:20:00.649" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?des=141P&amp;v-inf-min=18.5 
 path_url=/cad.api?des=141P&amp;v-inf-min=18.5 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:20:00.649" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?des=141P&amp;v-inf-min=18.5 
 status=200, reason=OK 
 body={"count":"0","signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"}}
 
 </msg>
<msg timestamp="20201001 19:20:00.649" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:20:00.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201001 19:19:59.624" endtime="20201001 19:20:00.650"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${expectedcount}</var>
</assign>
<msg timestamp="20201001 19:20:00.651" level="INFO">${expectedcount} = {"count":"0","signature":{"source":"NASA/JPL SBDB Close Approach Data API","version":"1.1"}}
</msg>
<status status="PASS" starttime="20201001 19:20:00.650" endtime="20201001 19:20:00.651"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedcountno}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20201001 19:20:00.651" endtime="20201001 19:20:00.651"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:59.622" endtime="20201001 19:20:00.652"></status>
</kw>
<status status="PASS" starttime="20201001 19:19:58.553" endtime="20201001 19:20:00.652" critical="yes"></status>
</test>
<test id="s1-t4" name="TC004">
<kw name="Verify Bad Request" library="data_resources">
<arguments>
<arg>sort=TestSort</arg>
<arg>400</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:20:00.656" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:20:00.656" endtime="20201001 19:20:00.656"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>sort=TestSort</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:20:00.657" level="INFO">&amp;{params} = { sort=TestSort }</msg>
<status status="PASS" starttime="20201001 19:20:00.656" endtime="20201001 19:20:00.657"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:20:01.621" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?sort=TestSort 
 path_url=/cad.api?sort=TestSort 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:20:01.621" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?sort=TestSort 
 status=400, reason=Bad Request 
 body={"moreInfo":"https://ssd-api.jpl.nasa.gov/doc/cad.html","message":"invalid value specified for query parameter 'sort': invalid sort parameter name","code":"400"}
 
 </msg>
<msg timestamp="20201001 19:20:01.621" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:20:01.621" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 19:20:00.657" endtime="20201001 19:20:01.622"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20201001 19:20:01.622" level="INFO">${statusC} = 400</msg>
<status status="PASS" starttime="20201001 19:20:01.622" endtime="20201001 19:20:01.622"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedStatusCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:20:01.622" endtime="20201001 19:20:01.623"></status>
</kw>
<status status="PASS" starttime="20201001 19:20:00.655" endtime="20201001 19:20:01.623"></status>
</kw>
<kw name="Verify Bad Request" library="data_resources">
<arguments>
<arg>date-min=now&amp;date-max=+60&amp;dist-max=0.05</arg>
<arg>400</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:20:01.624" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:20:01.624" endtime="20201001 19:20:01.625"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>sort=TestSort</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20201001 19:20:01.625" level="INFO">&amp;{params} = { sort=TestSort }</msg>
<status status="PASS" starttime="20201001 19:20:01.625" endtime="20201001 19:20:01.625"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
<arg>params=&amp;{params}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:20:02.625" level="INFO">GET Request : url=https://ssd-api.jpl.nasa.gov/cad.api?sort=TestSort 
 path_url=/cad.api?sort=TestSort 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:20:02.625" level="INFO">GET Response : url=https://ssd-api.jpl.nasa.gov/cad.api?sort=TestSort 
 status=400, reason=Bad Request 
 body={"moreInfo":"https://ssd-api.jpl.nasa.gov/doc/cad.html","message":"invalid value specified for query parameter 'sort': invalid sort parameter name","code":"400"}
 
 </msg>
<msg timestamp="20201001 19:20:02.625" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:20:02.626" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201001 19:20:01.625" endtime="20201001 19:20:02.626"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20201001 19:20:02.627" level="INFO">${statusC} = 400</msg>
<status status="PASS" starttime="20201001 19:20:02.626" endtime="20201001 19:20:02.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedStatusCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:20:02.627" endtime="20201001 19:20:02.627"></status>
</kw>
<status status="PASS" starttime="20201001 19:20:01.624" endtime="20201001 19:20:02.628"></status>
</kw>
<status status="PASS" starttime="20201001 19:20:00.654" endtime="20201001 19:20:02.628" critical="yes"></status>
</test>
<test id="s1-t5" name="TC005">
<kw name="Method Not Allowed" library="data_resources">
<arguments>
<arg>Invalid HTTP method: must be GET or POST</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20201001 19:20:02.632" level="INFO">Creating Session using : alias=SName, url=https://ssd-api.jpl.nasa.gov, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201001 19:20:02.631" endtime="20201001 19:20:02.632"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>/cad.api</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201001 19:20:03.592" level="INFO">HEAD Request : url=https://ssd-api.jpl.nasa.gov/cad.api 
 path_url=/cad.api 
 headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20201001 19:20:03.592" level="INFO">HEAD Response : url=https://ssd-api.jpl.nasa.gov/cad.api 
 status=405, reason=Method Not Allowed 
 body=None 
 </msg>
<msg timestamp="20201001 19:20:03.592" level="INFO">c:\users\divan\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'ssd-api.jpl.nasa.gov'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201001 19:20:03.592" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<status status="PASS" starttime="20201001 19:20:02.632" endtime="20201001 19:20:03.592"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20201001 19:20:03.593" endtime="20201001 19:20:03.593"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responsebody}</var>
</assign>
<msg timestamp="20201001 19:20:03.594" level="INFO">${responsebody} = </msg>
<status status="PASS" starttime="20201001 19:20:03.594" endtime="20201001 19:20:03.594"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${responsebodyvalue}</arg>
<arg>Invalid HTTP method: must be GET or POST</arg>
</arguments>
<status status="PASS" starttime="20201001 19:20:03.594" endtime="20201001 19:20:03.595"></status>
</kw>
<status status="PASS" starttime="20201001 19:20:02.631" endtime="20201001 19:20:03.595"></status>
</kw>
<status status="PASS" starttime="20201001 19:20:02.630" endtime="20201001 19:20:03.596" critical="yes"></status>
</test>
<status status="PASS" starttime="20201001 19:19:47.562" endtime="20201001 19:20:03.598"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Testcase">Testcase</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
